#!/bin/bash

# 필요한 패키지들을 하나의 문자열에 저장
REQUIRED_PACKAGES="wget oathtool unzip net-tools cron"

# 미설치된 패키지들을 확인하고 저장할 변수 초기화
PACKAGES_TO_INSTALL=""

# 각 필수 패키지에 대해 설치 여부 확인
for pkg in $REQUIRED_PACKAGES; do
    if ! dpkg -l | grep -qw "^ii  $pkg "; then
        PACKAGES_TO_INSTALL="$PACKAGES_TO_INSTALL $pkg"
    else
        echo "$pkg 패키지가 이미 설치되어 있습니다."
    fi
done

# 설치가 필요한 패키지가 있는 경우, 모두 한 번에 설치
if [ -n "$PACKAGES_TO_INSTALL" ]; then
    echo "다음 패키지를 설치합니다: $PACKAGES_TO_INSTALL"
    sudo apt-get install -y -qq $PACKAGES_TO_INSTALL
    if [ $? -ne 0 ]; then
        echo "패키지 설치에 실패했습니다."
        exit 1
    fi
fi

# 비밀 키를 환경 변수로 설정
SECRET_KEY="$SECRET_KEY"

# 최대 시도 횟수
MAX_ATTEMPTS=3

# TOTP 코드를 검증하는 함수
validate_totp() {
    attempt=0
    while [ $attempt -lt $MAX_ATTEMPTS ]; do
        # TOTP 코드 입력 요청
        read -p "TOTP 코드를 입력하세요: " USER_CODE

        # oathtool을 사용하여 현재 TOTP 코드 생성 및 검증
        GENERATED_CODE=$(oathtool --totp -b "$SECRET_KEY")

        if [ "$USER_CODE" == "$GENERATED_CODE" ]; then
            return 0  # 유효한 코드
        else
            echo "잘못된 코드입니다. 다시 시도하세요."
            attempt=$((attempt+1))
        fi
    done

    if [ $attempt -eq $MAX_ATTEMPTS ]; then
        echo "최대 시도 횟수를 초과했습니다. 설치를 진행할 수 없습니다."
        rm -f ~/install  # 최대 시도 횟수를 초과했을 때 install 파일 삭제
        echo "install 파일이 삭제되었습니다."
        exit 1
    fi
}

# 설정 파일 초기화 및 업데이트 함수
initialize_settings() {
    local ini_file="${HOME%/}/Steam/steamapps/common/PalServer/Pal/Saved/Config/LinuxServer/PalWorldSettings.ini"
    local custom_settings_file="${HOME%/}/.custom_settings.ini"

    # 파일 존재 여부 확인
    if [ ! -f "$custom_settings_file" ]; then
        touch "$custom_settings_file"
    fi

    # RCONEnabled 값 확인 및 필요한 경우 True로 변경
    if grep -q 'RCONEnabled=False' "$ini_file"; then
        sed -i 's/RCONEnabled=False/RCONEnabled=True/' "$ini_file"
        sed -i 's/RCONEnabled=False/RCONEnabled=True/' "$custom_settings_file"
        echo "RCONEnabled 설정이 False에서 True로 변경되었습니다."
    else
        echo "RCONEnabled 설정은 이미 True입니다."
    fi

    # AdminPassword 값 설정
    local admin_password=$(awk -F'=' '/AdminPassword=/ {print $2}' "$custom_settings_file" | tr -d '"')
    if [ -z "$admin_password" ]; then
        read -p "AdminPassword를 입력하세요: " admin_password
        sed -i "s/AdminPassword=.*$/AdminPassword=\"$admin_password\"/" "$ini_file"
        echo "AdminPassword가 설정되었습니다."
    fi

    # RCONPort 값 설정 (기본값 예시: 25575)
    local rcon_port=$(awk -F'=' '/RCONPort=/ {print $2}' "$custom_settings_file" | tr -d '"')
    if [ -z "$rcon_port" ]; then
        read -p "RCONPort를 입력하세요 (기본값: 25575): " rcon_port
        rcon_port=${rcon_port:-25575}  # 기본값 설정
        sed -i "s/RCONPort=.*$/RCONPort=\"$rcon_port\"/" "$ini_file"
        echo "RCONPort가 설정되었습니다."
    fi

    echo "설정이 초기화되었습니다."

    # 수정된 파일 내용 확인
    echo "custom_settings_file 내용:"
    cat "$custom_settings_file"

    # 수정된 ini_file 내용 확인
    echo "ini_file 내용:"
    cat "$ini_file"
}


# 소프트웨어 설치 함수
install_software() {
    echo "마루타 구동기를 설치합니다"
    wget -O ~/palworld https://raw.githubusercontent.com/kwakdolseok/maruta/main/palworld
    if [ $? -ne 0 ]; then
        echo "palworld 다운로드에 실패했습니다."
        exit 1
    fi

    chmod +x ~/palworld
    ~/palworld

    wget -O ~/arrcon.zip https://github.com/radj307/ARRCON/releases/download/3.3.7/ARRCON-3.3.7-Linux.zip
    if [ $? -ne 0 ]; then
        echo "ARRCON 다운로드에 실패했습니다."
        exit 1
    fi

    unzip ~/arrcon.zip -d ~
    if [ $? -ne 0 ]; then
        echo "압축 해제에 실패했습니다."
        exit 1
    fi

    rm ~/arrcon.zip
    echo "ARRCON을 다운로드하고 압축 해제했습니다."

    # 홈 디렉토리로 ~/arrcon/ 폴더 안의 파일 및 폴더 이동 및 정리
    if [ -d ~/arrcon ]; then
        mv -f ~/arrcon/* ~/
        rm -rf ~/arrcon
        echo "홈 디렉토리로 파일을 이동하고 ~/arrcon 폴더를 삭제했습니다."
    fi

    # 설치 완료 후 install 파일 삭제
    rm -f ~/install
    echo "install 파일을 삭제했습니다."
}

# TOTP 코드 검증 후 소프트웨어 설치 및 설정 초기화
if validate_totp; then
    install_software
    initialize_settings
else
    echo "TOTP 코드 검증에 실패했습니다."
    exit 1
fi
